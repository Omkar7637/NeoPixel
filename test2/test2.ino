#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h> 

#include <FastLED_NeoMatrix.h>
#include <FastLED.h>


#define PIN 12

int delayValue=500;
int i; 
//the Wemos WS2812B RGB shield has 1 LED connected to pin 2
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(300, PIN, NEO_GRB + NEO_KHZ800);

const unsigned int bitmap24[]={
0xD1A4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x000000, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0010 1 -(00-14) pixels
0x0000, 0x7F007F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0020 2 -(15-29) pixels

0x0000, 0x0000, 0x7F007F, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0030 3 -(30-44) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0040 4 -(45-59) pixels

0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0050 5 -(60-74) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x7F007F, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0060 6 -(75-89) pixels

0x0000, 0x0000, 0x0000, 0x7F007F, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0070 7 -(90-104) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0080 8 -(105-119) pixels

0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0090 9 -(120-134) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x00A0 10(135-159) pixels

0x0000, 0x0000, 0x0000, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0x0000, 0x0000, 0x0000,    // 0x00B0 11-(150-164) pixels
0x0000, 0x0000, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0x0000, 0x0000,    // 0x00C0 12-(165-179) pixels

0x0000, 0xA902, 0xA902, 0xA902, 0xA902, 0x00007f, 0x00, 0x00007f, 0x00007f, 0x00007f, 0xA902, 0xA902, 0xA902, 0xA902, 0x0000,    // 0x00D0 13-(180-194) pixels
0x0000, 0xA902, 0xA902, 0xA902, 0xA902, 0x00, 0x7F007F, 0x00007f, 0x7F007F, 0x00007f, 0xA902, 0xA902, 0xA902, 0xA902, 0x0000,    // 0x00E0 14-(195-209) pixels

0x0000, 0xA902, 0xA902, 0xA902, 0xA902, 0x00007f, 0x00007f, 0x00007f, 0x00007f, 0x00007f, 0xA902, 0xA902, 0xA902, 0xA902, 0x0000,    // 0x00F0 15-(210-224) pixels
0x0000, 0x0000, 0xA902, 0xA902, 0xA902, 0x00007f, 0x7F007F, 0x00007f, 0x00007f, 0x00, 0xA902, 0xA902, 0xA902, 0x0000, 0x0000,    // 0x0100 16-(225-239) pixels

0x0000, 0x0000, 0xA902, 0xA902, 0xA902, 0x00007f, 0x00007f, 0x00007f, 0x00, 0x00007f, 0xA902, 0xA902, 0xA902, 0x0000, 0x0000,    // 0x0110 17-(240-254) pixels
0x0000, 0x0000, 0x0000, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0x0000, 0x0000, 0x0000,    // 0x0120 18-(255-269) pixels

0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0xA902, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0130 19-(270-284) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000    // 0x0140 20-(285-300) pixels

};

const unsigned int bitmap25[]=
{
  
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0010 1 -(00-14) pixels
0x0000, 0x7f7f7f, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0020 2 -(15-29) pixels

0x0000, 0x0000, 0x7f7f7f, 0x0000, 0x0000, 0x0000, 0x00, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0030 3 -(30-44) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0040 4 -(45-59) pixels

0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0050 5 -(60-74) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x7f7f7f, 0x0000, 0x001f1f, 0x001f1f, 0x00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0060 6 -(75-89) pixels

0x0000, 0x0000, 0x0000, 0x7f7f7f, 0x0000, 0x0000, 0x0000, 0x00, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0070 7 -(90-104) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000,0x001f1f, 0x001f1f, 0x00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0080 8 -(105-119) pixels

0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0090 9 -(120-134) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000    // 0x00A0 10(135-159) pixels
};

const unsigned int bitmap26[]=
{
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0010 1 -(00-14) pixels
0x0000, 0x7f7f, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0020 2 -(15-29) pixels

0x0000, 0x0000, 0x7f7f, 0x0000, 0x0000, 0x0000, 0x0, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0030 3 -(30-44) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0040 4 -(45-59) pixels

0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0050 5 -(60-74) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x7f7f, 0x0000, 0x001f1f, 0x001f1f, 0x00, 0x00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0060 6 -(75-89) pixels

0x0000, 0x0000, 0x0000, 0x7f7f, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0070 7 -(90-104) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00, 0x00, 0x001f1f, 0x001f1f, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0080 8 -(105-119) pixels

0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x00, 0x00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0090 9 -(120-134) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x001f1f, 0x001f1f, 0x00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x00A0 10(135-159) pixels

};





/*
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0010 1 -(00-14) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0020 2 -(29-15) pixels

0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0030 3 -(30-44) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x9800, 0x9800, 0xA020, 0xA020, 0xA000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,    // 0x0040 4 -(59-45) pixels

0x9800, 0x9800, 0x9820, 0x9800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9800, 0xA020, 0xB102, 0xC245, 0xC205,    // 0x0050 5 -(60-74) pixels
0xB081, 0x9020, 0x2000, 0x0000, 0x0000, 0x0000, 0x9800, 0xA8A1, 0xB9C4, 0xC1C4, 0xB8E2, 0xB081, 0xA020, 0x5800, 0x0000,    // 0x0060 6 -(89-75) pixels

0x0000, 0x0000, 0xA020, 0xB9C4, 0xECEF, 0xF5F4, 0xECEF, 0xDB08, 0xC943, 0xB8C2, 0x9820, 0x4000, 0x0000, 0xA000, 0xBA25,    // 0x0070 7 -(90-104) pixels
0xEDB2, 0xED0F, 0xDB28, 0xC923, 0xB8A1, 0x9820, 0x2800, 0x0000, 0x0000, 0x9800, 0xB0E2, 0xE4AE, 0xF676, 0xED51, 0xE44C,    // 0x0080 8 -(119-105) pixels

0xD1C4, 0xD163, 0xB922, 0x9020, 0x8923, 0xD42C, 0xF5F4, 0xF676, 0xED91, 0xE48D, 0xDB69, 0xD183, 0xC8C2, 0xB881, 0x8820,    // 0x0090 9 -(120-134) pixels
0x9800, 0xA020, 0xD286, 0xED71, 0xECEF, 0xDB28, 0xD1E4, 0xD1A4, 0xD163, 0xD1E4, 0xD2C7, 0xC328, 0xD4AE, 0xF655, 0xEDD3,    // 0x00A0 10(159-135) pixels

0xDB49, 0xD245, 0xD1A4, 0xC902, 0xC922, 0xC922, 0xA881, 0x7000, 0x9800, 0xA881, 0xDB28, 0xECCE, 0xDB89, 0xD183, 0xD0E2,    // 0x00B0 11-(150-164) pixels
0xD122, 0xD205, 0xDB28, 0xE40B, 0xECCE, 0xECAE, 0xE40B, 0xDAE7, 0xD1A3, 0xD102, 0xD0E2, 0xD122, 0xD1C4, 0xD1C4, 0xB0C2,    // 0x00C0 12-(179-165) pixels

0xA020, 0xB0E2, 0xDAE7, 0xE40B, 0xDAC7, 0xD143, 0xD122, 0xD122, 0xD123, 0xD1A4, 0xDA46, 0xDAE7, 0xDB48, 0xDB08, 0xDA66,    // 0x00D0 13-(180-194) pixels
0xD143, 0xD122, 0xD102, 0xD163, 0xD205, 0xDA46, 0xB922, 0x8860, 0x9820, 0xB122, 0xDA66, 0xDB28, 0xDA66, 0xD163, 0xD163,    // 0x00E0 14-(209-195) pixels

0xD163, 0xD183, 0xD1A4, 0xD9C4, 0xD9E4, 0xD9C4, 0xD1A3, 0xD163, 0xD163, 0xD163, 0xD143, 0xD1A3, 0xDA86, 0xDAC7, 0xC163,    // 0x00F0 15-(210-224) pixels
0x7000, 0xA8E2, 0xDA25, 0xDA45, 0xD9E4, 0xD983, 0xD983, 0xD983, 0xD983, 0xD983, 0xD983, 0xD983, 0xD983, 0xD983, 0xD983,    // 0x0100 16-(239-225) pixels

0xD983, 0xD983, 0xD983, 0xDA25, 0xE308, 0xE2E7, 0xB963, 0x9081, 0x7000, 0x9881, 0xD9E4, 0xE205, 0xD9C4, 0xD9C4, 0xD9C4,    // 0x0110 17-(240-254) pixels
0xD9C4, 0xD9C4, 0xD9C4, 0xD9C4, 0xD9C4, 0xD9C4, 0xD9C4, 0xD9C4, 0xD9C4, 0xD9C4, 0xE225, 0xE308, 0xEB89, 0xE2A7, 0xA902,    // 0x0120 18-(271-255) pixels

0x0000, 0x8840, 0xB943, 0xE205, 0xE245, 0xE245, 0xE225, 0xE204, 0xE1E4, 0xE1E4, 0xE1E4, 0xE1E4, 0xE1E4, 0xE1E4, 0xE1E4,    // 0x0130 19-(270-284) pixels
0xE205, 0xE286, 0xEB28, 0xEBCA, 0xEB69, 0xC1A4, 0xA102, 0x9922, 0x0000, 0x0000, 0xA0E2, 0xC183, 0xEA86, 0xEAA7, 0x7F0000,    // 0x0140 20-(300-285) pixels
*/
 

  
void setup() 
{
  pixels.begin(); // This initializes the NeoPixel library.
 
}


void loop() 
{
  
  for(i=5; i<300; i++)
  {
   pixels.setPixelColor(i,bitmap24[i] );         //bitmap24[i]
  }

  position0();
  pixels.show();
  delay(delayValue);
  blank_disp();
  
  position1();
  pixels.show();
  delay(delayValue);
  blank_disp();

  position2();
  pixels.show();
  delay(delayValue);
  

 
}

void blank_disp()
{
  for(i=0; i<150; i++) 
  {  
    pixels.setPixelColor(i, pixels.Color(0,0,0));
  }
 
}
void position0()
{
  pixels.setPixelColor(8, pixels.Color(255,0,0));
  pixels.setPixelColor(22, pixels.Color(255,0,0));
  pixels.setPixelColor(36, pixels.Color(255,0,0));
  pixels.setPixelColor(37, pixels.Color(255,0,0));
  pixels.setPixelColor(52, pixels.Color(255,0,0));
  pixels.setPixelColor(53, pixels.Color(255,0,0));
  pixels.setPixelColor(66, pixels.Color(255,0,0));
  pixels.setPixelColor(67, pixels.Color(255,0,0));
  pixels.setPixelColor(82, pixels.Color(255,0,0));
  pixels.setPixelColor(83, pixels.Color(255,0,0));

  pixels.setPixelColor(97, pixels.Color(255,0,0));
  pixels.setPixelColor(98, pixels.Color(255,0,0));
  pixels.setPixelColor(111, pixels.Color(255,0,0));
  pixels.setPixelColor(112, pixels.Color(255,0,0));
  pixels.setPixelColor(127, pixels.Color(255,0,0));
  pixels.setPixelColor(128, pixels.Color(255,0,0));
  pixels.setPixelColor(142, pixels.Color(255,0,0));
  pixels.setPixelColor(143, pixels.Color(255,0,0));

  pixels.setPixelColor(231, pixels.Color(255,0,255));
  pixels.setPixelColor(233, pixels.Color(255,0,255));
  pixels.setPixelColor(201, pixels.Color(255,0,255));
  pixels.setPixelColor(203, pixels.Color(255,0,255));
 
}



void position1()
 {
  pixels.setPixelColor(9, pixels.Color(255,0,0));
  pixels.setPixelColor(21, pixels.Color(255,0,0));
  pixels.setPixelColor(38, pixels.Color(255,0,0));
  pixels.setPixelColor(37, pixels.Color(255,0,0));
  pixels.setPixelColor(52, pixels.Color(255,0,0));
  pixels.setPixelColor(51, pixels.Color(255,0,0));
  pixels.setPixelColor(68, pixels.Color(255,0,0));
  pixels.setPixelColor(67, pixels.Color(255,0,0));
  pixels.setPixelColor(81, pixels.Color(255,0,0));
  pixels.setPixelColor(82, pixels.Color(255,0,0));

  pixels.setPixelColor(99, pixels.Color(255,0,0));
  pixels.setPixelColor(98, pixels.Color(255,0,0));
  pixels.setPixelColor(111, pixels.Color(255,0,0));
  pixels.setPixelColor(110, pixels.Color(255,0,0));
  pixels.setPixelColor(129, pixels.Color(255,0,0));
  pixels.setPixelColor(128, pixels.Color(255,0,0));
  pixels.setPixelColor(142, pixels.Color(255,0,0));
  pixels.setPixelColor(141, pixels.Color(255,0,0));

  pixels.setPixelColor(201, pixels.Color(128,0,255));
  pixels.setPixelColor(203, pixels.Color(128,0,255));
  pixels.setPixelColor(231, pixels.Color(128,0,255));
  pixels.setPixelColor(233, pixels.Color(128,0,255));

  pixels.setPixelColor(16, pixels.Color(255,255,255));
  pixels.setPixelColor(32, pixels.Color(255,255,255));
  pixels.setPixelColor(79, pixels.Color(255,255,255));
  pixels.setPixelColor(93, pixels.Color(255,255,255));
  
  
 }

void position2()
{
  pixels.setPixelColor(7, pixels.Color(255,0,0));
  pixels.setPixelColor(21, pixels.Color(255,0,0));
  pixels.setPixelColor(38, pixels.Color(255,0,0));
  pixels.setPixelColor(37, pixels.Color(255,0,0));
  pixels.setPixelColor(52, pixels.Color(255,0,0));
  pixels.setPixelColor(51, pixels.Color(255,0,0));
  pixels.setPixelColor(68, pixels.Color(255,0,0));
  pixels.setPixelColor(67, pixels.Color(255,0,0));
  pixels.setPixelColor(82, pixels.Color(255,0,0));
  pixels.setPixelColor(81, pixels.Color(255,0,0));

  pixels.setPixelColor(97, pixels.Color(255,0,0));
  pixels.setPixelColor(96, pixels.Color(255,0,0));
  pixels.setPixelColor(113, pixels.Color(255,0,0));
  pixels.setPixelColor(112, pixels.Color(255,0,0));
  pixels.setPixelColor(127, pixels.Color(255,0,0));
  pixels.setPixelColor(126, pixels.Color(255,0,0));
  pixels.setPixelColor(142, pixels.Color(255,0,0));
  pixels.setPixelColor(141, pixels.Color(255,0,0));

  
  pixels.setPixelColor(201, pixels.Color(255,255,255));
  pixels.setPixelColor(203, pixels.Color(255,255,255));
  pixels.setPixelColor(231, pixels.Color(255,255,255));
  pixels.setPixelColor(233, pixels.Color(255,255,255));

  pixels.setPixelColor(16, pixels.Color(0,255,0));
  pixels.setPixelColor(32, pixels.Color(128,0,255));
  pixels.setPixelColor(79, pixels.Color(128,0,255));
  pixels.setPixelColor(93, pixels.Color(0,255,0));
  
 
}
 
//simple function which takes values for the red, green and blue led and also
//a delay
void setColor(int led, int redValue, int greenValue, int blueValue, int delayValue)
{
  pixels.setPixelColor(led, pixels.Color(redValue, greenValue, blueValue)); 
  pixels.show();
  delay(delayValue);
}
